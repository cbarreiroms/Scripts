=================================================================================================
# This Sample Code is provided for the purpose of illustration only and is not intended to be 
# used in a production environment.  THIS SAMPLE CODE AND ANY RELATED INFORMATION ARE PROVIDED 
# "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED 
# TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.  We 
# grant You a nonexclusive, royalty-free right to use and modify the Sample Code and to reproduce 
# and distribute the object code form of the Sample Code, provided that You agree: (i) to not use 
# Our name, logo, or trademarks to market Your software product in which the Sample Code is 
# embedded; (ii) to include a valid copyright notice on Your software product in which the Sample
# Code is embedded; and (iii) to indemnify, hold harmless, and defend Us and Our suppliers from 
# and against any claims or lawsuits, including attorneysâ€™ fees, that arise or result from the 
# use or distribution of the Sample Code.

# Please note: None of the conditions outlined in the disclaimer above will supersede the terms 
# and conditions contained within the Premier Customer Services Description.
# =================================================================================================


$daysToExpire = 30

Connect-AzAccount

$subscriptions = Get-AzSubscription | where {$_.Name -in 'Live', 'Potoca'}

$data = @()

foreach ($subscription in $subscriptions) {
    Select-AzSubscription -SubscriptionId $subscription.Id    

    $keyVaults = Get-AzKeyVault 

    foreach ($keyvault in $keyVaults) {
        $secrets = Get-AzKeyVaultSecret -VaultName $keyvault.VaultName | where {$_.Expires -ne $null -and $_.Expires -le (get-date).AddDays($daysToExpire)}

        foreach ($secret in $secrets) {
            $row = [PSCustomObject]@{ 
                Subscription = $subscription.Name 
                KeyVault = $keyvault.VaultName 
                Secret = $secret.Name
                Expires = $secret.Expires
            } 
            
            $data += $row        
        }
    }
}

$data

$data | ConvertTo-Json | Out-File c:\temp\secrets.json
$data | ConvertTo-Csv -NoTypeInformation | Out-File c:\temp\secrets.csv 
